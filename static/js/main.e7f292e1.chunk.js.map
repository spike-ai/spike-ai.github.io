{"version":3,"sources":["components/ContactForm.jsx","components/PrivacyPolicy.jsx","components/TermsOfService.jsx","components/features.jsx","components/footer.jsx","components/header.jsx","components/navigation.jsx","components/testimonials.jsx","App.jsx","serviceWorker.js","index.js"],"names":["ContactForm","useState","email","setEmail","submitted","setSubmitted","className","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","console","htmlFor","type","id","name","value","onChange","target","required","styles","container","padding","maxWidth","margin","fontFamily","lineHeight","header","textAlign","marginBottom","subheader","marginTop","content","TermsOfService","style","Features","props","data","map","d","i","icon","title","text","Footer","Header","bg","zIndex","position","top","paragraph","href","Navigation","data-toggle","data-target","src","alt","width","verticalAlign","border","borderRadius","boxShadow","Testimonials","img","App","landingPageData","setLandingPageData","useEffect","JsonData","path","element","PrivacyPolicy","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e7f292e1.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport const ContactForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"https://formspree.io/f/mgegbajq\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email }),\n    })\n      .then((response) => response.json())\n      .then(() => {\n        setSubmitted(true);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  return (\n    <div className=\"contact-form-container\">\n      <h2>Sign Up</h2>\n      {submitted ? (\n        <p>Thank you for signing up!</p>\n      ) : (\n        <form onSubmit={handleSubmit} className=\"contact-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email:</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              className=\"form-input\"\n            />\n          </div>\n          <button type=\"submit\" className=\"submit-button\">\n            Sign Up\n          </button>\n        </form>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\n\nconst TermsOfService = () => {\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.header}>Terms of Service</h1>\n      <div style={styles.content}>\n        <p>Welcome to our Terms of Service!</p>\n        <p>\n          These terms and conditions outline the rules and regulations for the\n          use of our website. By accessing this website we assume you accept\n          these terms and conditions in full. Do not continue to use the website\n          if you do not accept all of the terms and conditions stated on this\n          page.\n        </p>\n        <h2 style={styles.subheader}>License</h2>\n        <p>\n          Unless otherwise stated, we own the intellectual property rights for\n          all material on the website. All intellectual property rights are\n          reserved. You may view and/or print pages from the website for your\n          own personal use subject to restrictions set in these terms and\n          conditions.\n        </p>\n        <h2 style={styles.subheader}>User Comments</h2>\n        <p>\n          This Agreement shall begin on the date hereof. Certain parts of this\n          website offer the opportunity for users to post and exchange opinions,\n          information, material, and data ('Comments') in areas of the website.\n          We do not screen, edit, publish, or review Comments prior to their\n          appearance on the website and Comments do not reflect our views or\n          opinions, our agents, or affiliates.\n        </p>\n        <h2 style={styles.subheader}>Hyperlinking to our Content</h2>\n        <p>\n          The following organizations may link to our website without prior\n          written approval: Government agencies, Search engines, News\n          organizations, Online directory distributors, and Systemwide\n          Accredited Businesses except soliciting non-profit organizations,\n          charity shopping malls, and charity fundraising groups which may not\n          hyperlink to our website.\n        </p>\n        <p>\n          These organizations may link to our home page, to publications, or to\n          other website information so long as the link: (a) is not in any way\n          misleading; (b) does not falsely imply sponsorship, endorsement, or\n          approval of the linking party and its products or services; and (c)\n          fits within the context of the linking party's site.\n        </p>\n        <p>...</p>\n        <p>[Include additional sections of your Terms of Service as needed.]</p>\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    padding: \"20px\",\n    maxWidth: \"800px\",\n    margin: \"0 auto\",\n    fontFamily: \"Arial, sans-serif\",\n    lineHeight: \"1.6\",\n  },\n  header: {\n    textAlign: \"center\",\n    marginBottom: \"20px\",\n  },\n  subheader: {\n    marginTop: \"20px\",\n  },\n  content: {\n    textAlign: \"justify\",\n  },\n};\n\nexport default TermsOfService;\n","import React from \"react\";\n\nconst TermsOfService = () => {\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.header}>Terms of Service</h1>\n      <div style={styles.content}>\n        <p>Welcome to our Terms of Service!</p>\n        <p>\n          These terms and conditions outline the rules and regulations for the\n          use of our website. By accessing this website we assume you accept\n          these terms and conditions in full. Do not continue to use the website\n          if you do not accept all of the terms and conditions stated on this\n          page.\n        </p>\n        <h2 style={styles.subheader}>License</h2>\n        <p>\n          Unless otherwise stated, we own the intellectual property rights for\n          all material on the website. All intellectual property rights are\n          reserved. You may view and/or print pages from the website for your\n          own personal use subject to restrictions set in these terms and\n          conditions.\n        </p>\n        <h2 style={styles.subheader}>User Comments</h2>\n        <p>\n          This Agreement shall begin on the date hereof. Certain parts of this\n          website offer the opportunity for users to post and exchange opinions,\n          information, material, and data ('Comments') in areas of the website.\n          We do not screen, edit, publish, or review Comments prior to their\n          appearance on the website and Comments do not reflect our views or\n          opinions, our agents, or affiliates.\n        </p>\n        <h2 style={styles.subheader}>Hyperlinking to our Content</h2>\n        <p>\n          The following organizations may link to our website without prior\n          written approval: Government agencies, Search engines, News\n          organizations, Online directory distributors, and Systemwide\n          Accredited Businesses except soliciting non-profit organizations,\n          charity shopping malls, and charity fundraising groups which may not\n          hyperlink to our website.\n        </p>\n        <p>\n          These organizations may link to our home page, to publications, or to\n          other website information so long as the link: (a) is not in any way\n          misleading; (b) does not falsely imply sponsorship, endorsement, or\n          approval of the linking party and its products or services; and (c)\n          fits within the context of the linking party's site.\n        </p>\n        <p>...</p>\n        <p>[Include additional sections of your Terms of Service as needed.]</p>\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    padding: \"20px\",\n    maxWidth: \"800px\",\n    margin: \"0 auto\",\n    fontFamily: \"Arial, sans-serif\",\n    lineHeight: \"1.6\",\n  },\n  header: {\n    textAlign: \"center\",\n    marginBottom: \"20px\",\n  },\n  subheader: {\n    marginTop: \"20px\",\n  },\n  content: {\n    textAlign: \"justify\",\n  },\n};\n\nexport default TermsOfService;\n","export const Features = (props) => {\n  return (\n    <div id='features' className='text-center'>\n      <div className='container'>\n        <div className='col-md-10 col-md-offset-1 section-title'>\n          <h2>Features</h2>\n        </div>\n        <div className='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.title}-${i}`} className='col-xs-6 col-md-3'>\n                  {' '}\n                  <i className={d.icon}></i>\n                  <h3>{d.title}</h3>\n                  <p>{d.text}</p>\n                </div>\n              ))\n            : 'Loading...'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Footer = (props) => {\n  return (\n    <div>\n      <div id=\"footer\">\n        <div className=\"container text-center\">\n          <p>&copy; 2024 Slumber.ai.</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import ParticlesBg from \"particles-bg\";\n\nexport const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        <ParticlesBg type=\"lines\" bg={{zIndex: 0, position:\"absolute\", top:0}} />\n        <div className='overlay'>\n          <div className='container'>\n          \n            <div className='row'>\n              <div className='col-md-8 col-md-offset-2 intro-text'>\n                <h1>\n                  {props.data ? props.data.title : 'Loading'}\n                  <span></span>\n                </h1>\n                <p>{props.data ? props.data.paragraph : 'Loading'}</p>\n                <a\n                  href='#features'\n                  className='btn btn-custom btn-lg page-scroll'\n                >\n                  Learn More\n                </a>{' '}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","export const Navigation = (props) => {\n  return (\n    <nav id=\"menu\" className=\"navbar navbar-default navbar-fixed-top\">\n      <div className=\"container\">\n        <div className=\"navbar-header\">\n          <button\n            type=\"button\"\n            className=\"navbar-toggle collapsed\"\n            data-toggle=\"collapse\"\n            data-target=\"#bs-example-navbar-collapse-1\"\n          >\n            {\" \"}\n            <span className=\"sr-only\">Toggle navigation</span>{\" \"}\n            <span className=\"icon-bar\"></span>{\" \"}\n            <span className=\"icon-bar\"></span>{\" \"}\n            <span className=\"icon-bar\"></span>{\" \"}\n          </button>\n          <a className=\"navbar-brand page-scroll\" href=\"/\">\n            <span>\n              <img\n                src=\"img/ootd-logo.png\"\n                alt=\"OOTD\"\n                width={33}\n                style={{\n                  margin: \"0 5 5 0\",\n                  verticalAlign: \"middle\",\n                  border: \"2px solid #ccc\",\n                  borderRadius: \"5px\",\n                  boxShadow:\n                    \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n                }}\n              />\n              OOTD\n            </span>\n          </a>{\" \"}\n        </div>\n\n        <div\n          className=\"collapse navbar-collapse\"\n          id=\"bs-example-navbar-collapse-1\"\n        >\n          <ul className=\"nav navbar-nav navbar-right\">\n            <li>\n              <a href=\"/#features\" className=\"page-scroll\">\n                Features\n              </a>\n            </li>\n            {/* <li>\n              <a href='#about' className='page-scroll'>\n                About\n              </a>\n            </li> */}\n            {/* <li>\n              <a href='#services' className='page-scroll'>\n                Services\n              </a>\n            </li> */}\n            {/* <li>\n              <a href='#portfolio' className='page-scroll'>\n                Gallery\n              </a>\n            </li> */}\n            <li>\n              <a href=\"/signup\">Get Early Access</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const Testimonials = (props) => {\n  return (\n    <div id=\"testimonials\">\n      <div className=\"container\">\n        <div className=\"section-title text-center\">\n          <h2>What do OOTD stylists say</h2>\n        </div>\n        <div className=\"row\">\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.name}-${i}`} className=\"col-md-4\">\n                  <div className=\"testimonial\">\n                    <div className=\"testimonial-image\">\n                      {\" \"}\n                      <img src={d.img} alt=\"\" />{\" \"}\n                    </div>\n                    <div className=\"testimonial-content\">\n                      <p>\"{d.text}\"</p>\n                      <div className=\"testimonial-meta\"> - {d.name} </div>\n                    </div>\n                  </div>\n                </div>\n              ))\n            : \"loading\"}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Route, HashRouter as Router, Routes } from \"react-router-dom\";\nimport { ContactForm } from \"./components/ContactForm\";\nimport PrivacyPolicy from \"./components/PrivacyPolicy\";\nimport TermsOfService from \"./components/TermsOfService\";\nimport { Features } from \"./components/features\";\nimport { Footer } from \"./components/footer\";\nimport { Header } from \"./components/header\";\nimport { Navigation } from \"./components/navigation\";\nimport { Testimonials } from \"./components/testimonials\";\nimport JsonData from \"./data/data.json\";\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({});\n  useEffect(() => {\n    setLandingPageData(JsonData);\n  }, []);\n\n  return (\n    <Router>\n      <div>\n        <Navigation />\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <>\n                <Header data={landingPageData.Header} />\n                <Features data={landingPageData.Features} />\n                <Testimonials data={landingPageData.Testimonials} />\n                <Footer />\n              </>\n            }\n          />\n          <Route path=\"/signup\" element={<ContactForm />} />\n          <Route path=\"/terms-of-service\" element={<TermsOfService />} />\n          <Route path=\"/privacy-policy\" element={<PrivacyPolicy />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}