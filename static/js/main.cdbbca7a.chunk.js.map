{"version":3,"sources":["components/ContactForm.jsx","components/features.jsx","components/footer.jsx","components/header.jsx","components/navigation.jsx","components/testimonials.jsx","App.jsx","serviceWorker.js","index.js"],"names":["ContactForm","useState","email","setEmail","submitted","setSubmitted","className","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","console","htmlFor","type","id","name","value","onChange","target","required","Features","props","data","map","d","i","icon","title","text","Footer","Header","bg","zIndex","position","top","paragraph","href","Navigation","data-toggle","data-target","src","alt","width","style","margin","verticalAlign","border","borderRadius","boxShadow","Testimonials","img","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","path","element","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cdbbca7a.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport const ContactForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"https://formspree.io/f/mgegbajq\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email }),\n    })\n      .then((response) => response.json())\n      .then(() => {\n        setSubmitted(true);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  return (\n    <div className=\"contact-form-container\">\n      <h2>Sign Up</h2>\n      {submitted ? (\n        <p>Thank you for signing up!</p>\n      ) : (\n        <form onSubmit={handleSubmit} className=\"contact-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email:</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              className=\"form-input\"\n            />\n          </div>\n          <button type=\"submit\" className=\"submit-button\">\n            Sign Up\n          </button>\n        </form>\n      )}\n    </div>\n  );\n};\n","export const Features = (props) => {\n  return (\n    <div id='features' className='text-center'>\n      <div className='container'>\n        <div className='col-md-10 col-md-offset-1 section-title'>\n          <h2>Features</h2>\n        </div>\n        <div className='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.title}-${i}`} className='col-xs-6 col-md-3'>\n                  {' '}\n                  <i className={d.icon}></i>\n                  <h3>{d.title}</h3>\n                  <p>{d.text}</p>\n                </div>\n              ))\n            : 'Loading...'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Footer = (props) => {\n  return (\n    <div>\n      <div id=\"footer\">\n        <div className=\"container text-center\">\n          <p>&copy; 2024 Slumber.ai.</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import ParticlesBg from \"particles-bg\";\n\nexport const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        <ParticlesBg type=\"lines\" bg={{zIndex: 0, position:\"absolute\", top:0}} />\n        <div className='overlay'>\n          <div className='container'>\n          \n            <div className='row'>\n              <div className='col-md-8 col-md-offset-2 intro-text'>\n                <h1>\n                  {props.data ? props.data.title : 'Loading'}\n                  <span></span>\n                </h1>\n                <p>{props.data ? props.data.paragraph : 'Loading'}</p>\n                <a\n                  href='#features'\n                  className='btn btn-custom btn-lg page-scroll'\n                >\n                  Learn More\n                </a>{' '}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","export const Navigation = (props) => {\n  return (\n    <nav id=\"menu\" className=\"navbar navbar-default navbar-fixed-top\">\n      <div className=\"container\">\n        <div className=\"navbar-header\">\n          <button\n            type=\"button\"\n            className=\"navbar-toggle collapsed\"\n            data-toggle=\"collapse\"\n            data-target=\"#bs-example-navbar-collapse-1\"\n          >\n            {\" \"}\n            <span className=\"sr-only\">Toggle navigation</span>{\" \"}\n            <span className=\"icon-bar\"></span>{\" \"}\n            <span className=\"icon-bar\"></span>{\" \"}\n            <span className=\"icon-bar\"></span>{\" \"}\n          </button>\n          <a className=\"navbar-brand page-scroll\" href=\"/\">\n            <span>\n              <img\n                src=\"img/ootd-logo.png\"\n                alt=\"OOTD\"\n                width={33}\n                style={{\n                  margin: \"0 5 5 0\",\n                  verticalAlign: \"middle\",\n                  border: \"2px solid #ccc\",\n                  borderRadius: \"5px\",\n                  boxShadow:\n                    \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n                }}\n              />\n              OOTD\n            </span>\n          </a>{\" \"}\n        </div>\n\n        <div\n          className=\"collapse navbar-collapse\"\n          id=\"bs-example-navbar-collapse-1\"\n        >\n          <ul className=\"nav navbar-nav navbar-right\">\n            <li>\n              <a href=\"/#features\" className=\"page-scroll\">\n                Features\n              </a>\n            </li>\n            {/* <li>\n              <a href='#about' className='page-scroll'>\n                About\n              </a>\n            </li> */}\n            {/* <li>\n              <a href='#services' className='page-scroll'>\n                Services\n              </a>\n            </li> */}\n            {/* <li>\n              <a href='#portfolio' className='page-scroll'>\n                Gallery\n              </a>\n            </li> */}\n            <li>\n              <a href=\"/signup\">Get Early Access</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const Testimonials = (props) => {\n  return (\n    <div id=\"testimonials\">\n      <div className=\"container\">\n        <div className=\"section-title text-center\">\n          <h2>What do OOTD stylists say</h2>\n        </div>\n        <div className=\"row\">\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.name}-${i}`} className=\"col-md-4\">\n                  <div className=\"testimonial\">\n                    <div className=\"testimonial-image\">\n                      {\" \"}\n                      <img src={d.img} alt=\"\" />{\" \"}\n                    </div>\n                    <div className=\"testimonial-content\">\n                      <p>\"{d.text}\"</p>\n                      <div className=\"testimonial-meta\"> - {d.name} </div>\n                    </div>\n                  </div>\n                </div>\n              ))\n            : \"loading\"}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Route, BrowserRouter as Router, Routes } from \"react-router-dom\";\nimport SmoothScroll from \"smooth-scroll\";\nimport { ContactForm } from \"./components/ContactForm\";\nimport { Features } from \"./components/features\";\nimport { Footer } from \"./components/footer\";\nimport { Header } from \"./components/header\";\nimport { Navigation } from \"./components/navigation\";\nimport { Testimonials } from \"./components/testimonials\";\nimport JsonData from \"./data/data.json\";\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n});\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({});\n  useEffect(() => {\n    setLandingPageData(JsonData);\n  }, []);\n\n  return (\n    <Router>\n      <div>\n        <Navigation />\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <>\n                <Header data={landingPageData.Header} />\n                <Features data={landingPageData.Features} />\n                {/* <About data={landingPageData.About} /> */}\n                {/* <Services data={landingPageData.Services} /> */}\n                {/* <Gallery /> */}\n                <Testimonials data={landingPageData.Testimonials} />\n                {/* <Contact data={landingPageData.Contact} /> */}\n                <Footer />\n              </>\n            }\n          />\n          <Route path=\"/signup\" element={<ContactForm />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}